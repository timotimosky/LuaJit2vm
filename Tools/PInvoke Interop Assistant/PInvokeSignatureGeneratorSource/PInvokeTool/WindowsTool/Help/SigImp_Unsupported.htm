<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252" />
<title>Unsupported Scenarios and Other Special Cases</title>

<style type="text/css">
	body {background: white; color: black}
	h1 {font: 14pt Arial bold}
	p {font: 10pt Arial}
	li {font: 10pt Arial}
</style>
</head>

<body>
<h1>Unsupported Scenarios and Other Special Cases</h1>
<p>
In the current version, the tool doesn’t support converting unmanaged signatures in the following scenarios:
</p>
<ul>
<li>Const value types, such as <i>const int a = 1</i></li>
<li>Explicit cast macro definition, such as <i>#define A (char)1</i></li>
<li>Macro functions, such as <i>#define Min(a,b)?a:b</i></li>
<li>Macros involving expressions, such as <i>#define A (1+2-0.1)</i></li>
<li>Nested macros such as <i>#define A TEXT(&quot;AA&quot;)</i></li>
<li>Typedefs that are equivalent to primitive types, such as <i>typedef int  A</i></li>
<li>Functions with a variable number of arguments</li>
<li>C++ language features, such as classes, templates, and namespaces</li>
<li>The DLL name in DllImportAttribute might be unknown if the functions are implemented in .lib file, the
functions are user defined, or in other cases that the DLL name cannot be determined.</li>
</ul>
<p>
Check MSDN for help in manually generating signatures for the above scenarios. Some other special cases are:
</p>
<ul>
<li>The built-in types and APIs are from Visual Studio 2005 with Service Pack 1.  For the types and
APIs from other versions, you may need to copy the necessary declarations from the corresponding header files,
and paste it into the <i>SigImp Translate Snippet</i> tool to see the results.</li>
<li>When no calling convention is specified in unmanaged code, it’s recommended that you review the generated
code and make sure that the calling convention is correct.</li>
</ul>
</body>
</html>
